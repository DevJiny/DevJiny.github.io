<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://devjiny.github.io/</id><title>DevJiny</title><subtitle>Backend, Developer, Kubernetes, Java, Springboot, K8S, AWS</subtitle> <updated>2022-07-15T18:32:59+09:00</updated> <author> <name>DevJiny</name> <uri>https://devjiny.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://devjiny.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://devjiny.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 DevJiny </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Datadog on Kubernetes</title><link href="https://devjiny.github.io/posts/datadog/" rel="alternate" type="text/html" title="Datadog on Kubernetes" /><published>2022-07-14T00:00:00+09:00</published> <updated>2022-07-14T00:00:00+09:00</updated> <id>https://devjiny.github.io/posts/datadog/</id> <content src="https://devjiny.github.io/posts/datadog/" /> <author> <name>DevJiny</name> </author> <category term="DevOps" /> <category term="K8S" /> <category term="Datadog" /> <summary> Datadog Document Link https://docs.datadoghq.com/containers/kubernetes/installation/?tab=helm&amp;amp;tabs=null Basic values https://github.com/DataDog/helm-charts/blob/main/examples/datadog/agent_basic_values.yaml targetSystem: "linux" datadog: logs: enabled: true containerCollectAll: false # containerCollectUsingFiles: true apm: portEnabled: true socketPath: /var/run/d... </summary> </entry> <entry><title>ArgoCD 설치</title><link href="https://devjiny.github.io/posts/argocd/" rel="alternate" type="text/html" title="ArgoCD 설치" /><published>2022-07-14T00:00:00+09:00</published> <updated>2022-07-14T00:00:00+09:00</updated> <id>https://devjiny.github.io/posts/argocd/</id> <content src="https://devjiny.github.io/posts/argocd/" /> <author> <name>DevJiny</name> </author> <category term="DevOps" /> <category term="K8S" /> <summary> Argocd 설치 https://argo-cd.readthedocs.io/en/stable/getting_started/ $ kubectl create namespace argocd $ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml Client Side Argocd 설치 $ brew install argocd Disable internal TLS ArgoCD 내부적으로 사용하는 https를 http로 변경 -&amp;gt; TLS 없이 통신 하도록 변경하자 kubectl -n argocd edit deployments.apps argocd-server... </summary> </entry> <entry><title>EKS Fargate Cluster with Ingress ALB</title><link href="https://devjiny.github.io/posts/eks-fargate/" rel="alternate" type="text/html" title="EKS Fargate Cluster with Ingress ALB" /><published>2022-05-25T00:00:00+09:00</published> <updated>2022-05-25T00:00:00+09:00</updated> <id>https://devjiny.github.io/posts/eks-fargate/</id> <content src="https://devjiny.github.io/posts/eks-fargate/" /> <author> <name>DevJiny</name> </author> <category term="DevOps" /> <category term="K8S" /> <summary> 설치 $ brew install awscli $ brew install eksctl $ brew install helm AWS CLI Login $ aws configure AWS Access Key ID [None]: xxx AWS Secret Access Key [None]: xxx Default region name [None]: ap-northeast-2 Default output format [None]: json EKS Cluster 생성 cluster-fargate.yaml 파일 생성 apiVersion: eksctl.io/v1alpha5 kind: ClusterConfig metadata: name: fargate-cluster region: ap-north... </summary> </entry> <entry><title>Kubernetes Cluster의 Master Node에 Pod Deploy 하기</title><link href="https://devjiny.github.io/posts/use-k8s-master/" rel="alternate" type="text/html" title="Kubernetes Cluster의 Master Node에 Pod Deploy 하기" /><published>2020-06-01T00:00:00+09:00</published> <updated>2020-06-01T00:00:00+09:00</updated> <id>https://devjiny.github.io/posts/use-k8s-master/</id> <content src="https://devjiny.github.io/posts/use-k8s-master/" /> <author> <name>DevJiny</name> </author> <category term="DevOps" /> <category term="K8S" /> <summary> Preface 기본적으로 Kubernetes Master Node에는 Pod가 Deploy 되지 않는다. (보안상의 이유로) 만약, Master Node (Control Plane)에 Pod를 Deploy 하고자 한다면, 아래와 같이 실행 한다. $ kubectl taint nodes --all node-role.kubernetes.io/master- Command 상기는 명령은 Cluster 내의 모든 Node에서 아래 Taint를 제거 하는것이다. node-role.kubernetes.io/master 결과 Output은 다음과 같다. node "test-01" untainted taint "node-role.kubernetes.io/master:" not found tai... </summary> </entry> </feed>
